### Generated by Winemaker 0.7.6


SRCDIR                = .
DLLS                  =
EXES                  = lspacln \
			lspares



### Common settings

CEXTRA                = -mno-cygwin \
			-m32
CXXEXTRA              = -mno-cygwin \
			-m32
RCEXTRA               =
DEFINES               =
INCLUDE_PATH          = -I../h
DLL_PATH              =
DLL_IMPORTS           =
LIBRARY_PATH          =
LIBRARIES             =


### Extra source lists

EXTRA_C_SRCS          =
EXTRA_CXX_SRCS        =
EXTRA_RC_SRCS         = bob.rc \
			mig.rc

EXTRA_OBJS            = $(EXTRA_C_SRCS:.c=.o) \
			$(EXTRA_CXX_SRCS:.cpp=.o)



### lspacln sources and settings

lspacln_MODULE        = lspacln
lspacln_C_SRCS        =
lspacln_CXX_SRCS      =
lspacln_RC_SRCS       =
lspacln_LDFLAGS       = -mwindows \
			-mno-cygwin \
			-m32
lspacln_DLL_PATH      =
lspacln_DLLS          = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32
lspacln_LIBRARY_PATH  =
lspacln_LIBRARIES     = uuid

lspacln_OBJS          = $(lspacln_C_SRCS:.c=.o) \
			$(lspacln_CXX_SRCS:.cpp=.o) \
			$(lspacln_RC_SRCS:.rc=.res)



### lspares sources and settings

lspares_MODULE        = lspares
lspares_C_SRCS        =
lspares_CXX_SRCS      =
lspares_RC_SRCS       =
lspares_LDFLAGS       = -mwindows \
			-mno-cygwin \
			-m32
lspares_DLL_PATH      =
lspares_DLLS          = odbc32 \
			ole32 \
			oleaut32 \
			winspool \
			odbccp32
lspares_LIBRARY_PATH  =
lspares_LIBRARIES     = uuid

lspares_OBJS          = $(lspares_C_SRCS:.c=.o) \
			$(lspares_CXX_SRCS:.cpp=.o) \
			$(lspares_RC_SRCS:.rc=.res)



### Global source lists

C_SRCS                = $(lspacln_C_SRCS) \
			$(lspares_C_SRCS) \
			$(EXTRA_C_SRCS)
CXX_SRCS              = $(lspacln_CXX_SRCS) \
			$(lspares_CXX_SRCS) \
			$(EXTRA_CXX_SRCS)
RC_SRCS               = $(lspacln_RC_SRCS) \
			$(lspares_RC_SRCS) \
			$(EXTRA_RC_SRCS)


### Tools

CC = winegcc
CXX = wineg++
RC = wrc


### Generic targets

all: $(DLLS:%=%.so) $(EXES)

### Build rules

.PHONY: all clean dummy

$(SUBDIRS): dummy
	@cd $@ && $(MAKE)

# Implicit rules

.SUFFIXES: .cpp .rc .res
DEFINCL = $(INCLUDE_PATH) $(DEFINES) $(OPTIONS)

.c.o:
	$(CC) -c $(CFLAGS) $(CEXTRA) $(DEFINCL) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.rc.res:
	$(RC) $(RCFLAGS) $(RCEXTRA) $(DEFINCL) -fo$@ $<

# Rules for cleaning

CLEAN_FILES     = y.tab.c y.tab.h lex.yy.c core *.orig *.rej \
                  \\\#*\\\# *~ *% .\\\#*

clean:: $(SUBDIRS:%=%/__clean__) $(EXTRASUBDIRS:%=%/__clean__)
	$(RM) $(CLEAN_FILES) $(RC_SRCS:.rc=.res) $(C_SRCS:.c=.o) $(CXX_SRCS:.cpp=.o)
	$(RM) $(DLLS:%=%.so) $(EXES) $(EXES:%=%.so)

$(SUBDIRS:%=%/__clean__): dummy
	cd `dirname $@` && $(MAKE) clean

$(EXTRASUBDIRS:%=%/__clean__): dummy
	-cd `dirname $@` && $(RM) $(CLEAN_FILES)

### Target specific build rules
DEFLIB = $(LIBRARY_PATH) $(LIBRARIES) $(DLL_PATH) $(DLL_IMPORTS:%=-l%)

$(lspacln_MODULE): $(lspacln_OBJS)
	$(CC) $(lspacln_LDFLAGS) -o $@ $(lspacln_OBJS) $(lspacln_LIBRARY_PATH) $(DEFLIB) $(lspacln_DLLS:%=-l%) $(lspacln_LIBRARIES:%=-l%)


$(lspares_MODULE): $(lspares_OBJS)
	$(CC) $(lspares_LDFLAGS) -o $@ $(lspares_OBJS) $(lspares_LIBRARY_PATH) $(DEFLIB) $(lspares_DLLS:%=-l%) $(lspares_LIBRARIES:%=-l%)


